var table = document.getElementById('weatherTable');
var navbar_wrapper = document.getElementById('navbar-wrapper');
var tempHead = document.getElementById('tempNow');
var weatherDes = document.getElementById('weatherDescription');
var cityName = document.getElementById('city');
var srhBtn = document.getElementById('srhBtn');
var city = document.getElementById('cityli');
var zip = document.getElementById('zip');
var searchZIPInput = document.getElementById('searchZIP');
var searchzipcountry = document.getElementById('searchzipcountry');
var lat_lon = document.getElementById('lat_lon');
var searchLonInput = document.getElementById('searchLon');
var searchLatInput = document.getElementById('searchLat');
var celsius = document.getElementById('celsius');
var fahrenheit = document.getElementById('fahrenheit');
var kelvin = document.getElementById('kelvin');
var newTableRow = document.createElement('div');
var newTableRow2 = document.createElement('div');
var newTableRow3 = document.createElement('div');
var newTableRow4 = document.createElement('div');
var newTableRow5 = document.createElement('div');
var newTableRow6 = document.createElement('div');
var newTableRow7 = document.createElement('div');
var newTableRow8 = document.createElement('div');
var newTableRow9 = document.createElement('div');
var newTableRow10 = document.createElement('div');
var search = document.getElementById('search');
var searchCountry = document.getElementById('searchCountry');
var tempMetric = '°c';
// var tempimPERIAL = '°f'
// const ctx = document.getElementById('my-canvas').getcontext2d
var ctx = document.getElementById('myChart').getContext('2d');

const burger = document.querySelector('.burger');
const burger1 = document.querySelector('.burger1');
const burger2 = document.querySelector('.burger2');
const burger3 = document.querySelector('.burger3');
const nav_con = document.querySelector('.nav-con');
const input_wrapper = document.querySelector('.input-wrapper');
const input_wrapper2 = document.querySelector('.input-wrapper2');
const input_wrapper3 = document.querySelector('.input-wrapper3');
var refresh;

const humidity = `<svg height="512pt" viewBox="-88 0 512 512" width="512pt" xmlns="http://www.w3.org/2000/svg"><g fill-rule="evenodd"><path d="m315.625 266.023438c-.0625-.136719-.132812-.269532-.203125-.402344l-139.054687-260.332032c-1.738282-3.257812-5.132813-5.289062-8.820313-5.289062-3.691406 0-7.082031 2.03125-8.820313 5.289062l-68.730468 128.667969c-2.601563 4.871094-.761719 10.933594 4.109375 13.53125 4.875 2.605469 10.929687.765625 13.53125-4.105469l59.910156-112.15625 130.027344 243.429688c.066406.128906.128906.257812.199219.386719 11.332031 21.214843 17.320312 45.214843 17.320312 69.410156 0 81.359375-66.191406 147.546875-147.546875 147.546875-81.359375 0-147.546875-66.1875-147.546875-147.546875 0-24.195313 5.988281-48.199219 17.320312-69.410156.074219-.132813.140626-.269531.207032-.402344l32.414062-60.683594c2.601563-4.871093.761719-10.929687-4.109375-13.53125-4.871093-2.601562-10.929687-.761719-13.53125 4.109375l-32.628906 61.085938c-.074219.136718-.148437.277344-.210937.417968-12.734376 23.996094-19.460938 51.101563-19.460938 78.414063 0 92.386719 75.160156 167.546875 167.546875 167.546875s167.546875-75.160156 167.546875-167.546875c0-27.320313-6.730469-54.429687-19.46875-78.429687zm0 0"/><path d="m213.378906 262.910156c-4.785156-2.761718-10.898437-1.121094-13.660156 3.660156l-81.664062 141.445313c-2.761719 4.785156-1.121094 10.898437 3.660156 13.660156 1.574218.910157 3.292968 1.34375 4.992187 1.34375 3.453125 0 6.816407-1.792969 8.667969-5.003906l81.664062-141.445313c2.761719-4.78125 1.121094-10.898437-3.660156-13.660156zm0 0"/><path d="m114.121094 250.230469c-22.507813 0-40.820313 18.3125-40.820313 40.820312 0 22.511719 18.3125 40.824219 40.820313 40.824219 22.507812 0 40.820312-18.3125 40.820312-40.824219 0-22.507812-18.3125-40.820312-40.820312-40.820312zm0 61.644531c-11.480469 0-20.820313-9.339844-20.820313-20.820312 0-11.484376 9.339844-20.824219 20.820313-20.824219 11.480468 0 20.820312 9.339843 20.820312 20.824219 0 11.480468-9.339844 20.820312-20.820312 20.820312zm0 0"/><path d="m180.148438 393.535156c0 22.511719 18.316406 40.824219 40.824218 40.824219 22.507813 0 40.820313-18.3125 40.820313-40.824219 0-22.507812-18.3125-40.820312-40.820313-40.820312-22.507812 0-40.824218 18.3125-40.824218 40.820312zm40.824218-20.820312c11.480469 0 20.820313 9.339844 20.820313 20.820312 0 11.484375-9.339844 20.824219-20.820313 20.824219-11.480468 0-20.824218-9.339844-20.824218-20.824219 0-11.480468 9.339843-20.820312 20.824218-20.820312zm0 0"/><path d="m79.96875 183.957031c5.507812 0 10-4.492187 10-10 0-5.507812-4.492188-10-10-10s-10 4.492188-10 10c0 5.507813 4.492188 10 10 10zm0 0"/></g></svg>`;
const temperature = `<svg height="581pt" viewBox="-184 0 581 581.55153" width="581pt" xmlns="http://www.w3.org/2000/svg"><path d="m107.15625 0c-37.46875.0429688-67.832031 30.40625-67.875 67.875v325.101562c-28.816406 23.519532-43.148438 60.460938-37.734375 97.261719 8.230469 58.328125 62.191406 98.9375 120.515625 90.703125 52.707031-7.441406 91.859375-52.601562 91.75-105.828125.097656-31.824219-14.148438-61.992187-38.785156-82.136719v-325.101562c-.039063-37.46875-30.402344-67.8320312-67.871094-67.875zm87.265625 475.113281c.0625 48.191407-38.953125 87.316407-87.148437 87.378907-48.195313.066406-87.320313-38.953126-87.382813-87.148438-.035156-27.507812 12.898437-53.421875 34.90625-69.925781 2.441406-1.832031 3.878906-4.707031 3.878906-7.757813v-29.207031h19.390625v-19.390625h-19.390625v-29.089844h19.390625v-19.390625h-19.390625v-29.089843h19.390625v-19.390626h-19.390625v-29.089843h19.390625v-19.390625h-19.390625v-29.089844h19.390625v-19.390625h-19.390625v-29.089844h19.390625v-19.390625h-19.390625v-38.785156c0-26.777344 21.703125-48.480469 48.480469-48.480469 26.773438 0 48.480469 21.703125 48.480469 48.480469v329.804688c0 3.050781 1.4375 5.925781 3.878906 7.753906 22.019531 16.382812 34.96875 42.234375 34.90625 69.679687zm0 0"/><path d="m116.851562 427.601562v-340.335937h-19.390624v340.335937c-26.234376 5.355469-43.160157 30.960938-37.804688 57.195313s30.960938 43.160156 57.195312 37.804687c26.234376-5.355468 43.160157-30.960937 37.804688-57.195312-3.886719-19.042969-18.765625-33.917969-37.804688-37.804688zm-9.695312 76.597657c-16.066406 0-29.089844-13.023438-29.089844-29.085938 0-16.066406 13.023438-29.089843 29.089844-29.089843s29.089844 13.023437 29.089844 29.089843c0 16.0625-13.023438 29.085938-29.089844 29.085938zm0 0"/></svg>`;
const pressure = `<svg height="512pt" viewBox="0 0 512 512" width="512pt" xmlns="http://www.w3.org/2000/svg"><g fill-rule="evenodd"><path d="m512 256c0-141.160156-114.839844-256-256-256s-256 114.839844-256 256c0 38.390625 8.511719 74.824219 23.71875 107.542969.132812.421875.292969.839843.484375 1.25 20.390625 43.371093 52.476563 80.101562 92.792969 106.214843 30.292968 19.625 64.164062 32.46875 99.5625 37.953126.335937.050781.667968.105468 1 .152343 1.90625.289063 3.820312.5625 5.730468.804688.0625.007812.125.015625.1875.023437 1.941407.25 3.890626.46875 5.839844.671875.480469.050781.964844.097657 1.445313.144531 1.539062.148438 3.078125.285157 4.617187.410157.472656.035156.945313.078125 1.417969.113281 1.910156.140625 3.824219.265625 5.738281.363281.394532.019531.789063.035157 1.183594.054688 1.59375.074219 3.183594.136719 4.777344.183593.542968.015626 1.085937.03125 1.628906.042969 1.957031.042969 3.914062.074219 5.875.074219s3.917969-.03125 5.875-.074219c.542969-.011719 1.085938-.027343 1.625-.042969 1.597656-.046874 3.1875-.105468 4.777344-.183593.398437-.019531.789062-.03125 1.1875-.054688 1.914062-.097656 3.828125-.222656 5.738281-.363281.472656-.035156.941406-.078125 1.414063-.113281 1.542968-.125 3.082031-.261719 4.621093-.410157.480469-.046874.964844-.09375 1.445313-.144531 1.949218-.203125 3.894531-.421875 5.835937-.671875.066407-.007812.125-.015625.1875-.023437 1.914063-.242188 3.824219-.515625 5.734375-.804688.332032-.050781.664063-.101562.996094-.152343 35.402344-5.484376 69.273438-18.328126 99.566406-37.953126 40.316406-26.113281 72.402344-62.84375 92.792969-106.214843.191406-.410157.351563-.828125.484375-1.25 15.207031-32.71875 23.71875-69.152344 23.71875-107.542969zm-256-236c130.132812 0 236 105.867188 236 236 0 33.601562-7.074219 65.574219-19.785156 94.535156h-176.214844c-5.523438 0-10 4.480469-10 10 0 5.523438 4.476562 10 10 10h166.277344c-11.574219 20.765625-26.179688 39.613282-43.230469 55.929688-.613281.585937-1.234375 1.164062-1.855469 1.738281-.371094.351563-.746094.695313-1.117187 1.042969-39.035157 35.917968-89.675781 58.382812-143.722657 62.179687-.597656.039063-1.191406.074219-1.789062.109375-1.257812.082032-2.523438.148438-3.785156.207032-1.273438.058593-2.554688.109374-3.835938.148437-.554687.015625-1.113281.027344-1.671875.042969-1.753906.039062-3.507812.066406-5.269531.066406s-3.519531-.027344-5.269531-.066406c-.558594-.011719-1.117188-.027344-1.671875-.042969-1.28125-.039063-2.5625-.089844-3.839844-.144531-1.261719-.058594-2.519531-.128906-3.777344-.207032-.597656-.035156-1.195312-.074218-1.792968-.113281-54.039063-3.796875-104.667969-26.25-143.695313-62.15625-.410156-.378906-.816406-.757812-1.222656-1.136719-.589844-.550781-1.179688-1.097656-1.761719-1.652343-17.058594-16.320313-31.667969-35.175781-43.246094-55.941407h166.277344c5.523438 0 10-4.476562 10-10 0-5.523437-4.476562-10-10-10h-176.214844c-12.710937-28.964843-19.785156-60.9375-19.785156-94.539062 0-130.132812 105.867188-236 236-236zm0 0"/><path d="m256 313.960938c31.960938 0 57.960938-26 57.960938-57.960938 0-4.679688-.5625-9.339844-1.671876-13.859375-.082031-.457031-.199218-.902344-.34375-1.335937l-46.265624-178.734376c-1.140626-4.414062-5.121094-7.496093-9.679688-7.496093s-8.539062 3.082031-9.679688 7.496093l-46.433593 179.371094c-1.226563 4.734375-1.847657 9.632813-1.847657 14.558594 0 31.960938 26 57.960938 57.960938 57.960938zm-36.753906-67.507813 36.753906-141.972656 36.75 141.972656c.804688 3.097656 1.210938 6.3125 1.210938 9.546875 0 20.929688-17.03125 37.960938-37.960938 37.960938-20.933594 0-37.960938-17.03125-37.960938-37.960938 0-3.234375.40625-6.449219 1.207032-9.546875zm0 0"/><path d="m406.003906 256c0 5.523438 4.476563 10 10 10h43.824219c5.523437 0 10-4.476562 10-10s-4.476563-10-10-10h-43.824219c-5.523437 0-10 4.476562-10 10zm0 0"/><path d="m394.597656 185.988281c1.695313 0 3.414063-.433593 4.988282-1.339843l37.933593-21.902344c4.785157-2.761719 6.421875-8.878906 3.660157-13.660156-2.757813-4.78125-8.875-6.421876-13.660157-3.660157l-37.933593 21.902344c-4.78125 2.761719-6.421876 8.875-3.660157 13.660156 1.851563 3.207031 5.214844 5 8.671875 5zm0 0"/><path d="m52.171875 266h43.824219c5.523437 0 10-4.476562 10-10s-4.476563-10-10-10h-43.824219c-5.523437 0-10 4.476562-10 10s4.476563 10 10 10zm0 0"/><path d="m74.480469 162.746094 37.933593 21.902344c1.574219.90625 3.292969 1.339843 4.988282 1.339843 3.457031 0 6.820312-1.792969 8.671875-5 2.761719-4.785156 1.121093-10.898437-3.660157-13.660156l-37.933593-21.902344c-4.785157-2.761719-10.898438-1.121093-13.660157 3.660157-2.761718 4.78125-1.125 10.898437 3.660157 13.660156zm0 0"/><path d="m331.011719 126.074219c1.578125.90625 3.296875 1.339843 4.992187 1.339843 3.457032 0 6.816406-1.792968 8.667969-5l21.902344-37.933593c2.761719-4.785157 1.121093-10.898438-3.660157-13.660157-4.785156-2.761718-10.898437-1.125-13.660156 3.660157l-21.902344 37.933593c-2.761718 4.78125-1.121093 10.898438 3.660157 13.660157zm0 0"/><path d="m167.328125 122.414062c1.851563 3.207032 5.210937 5 8.667969 5 1.695312 0 3.417968-.433593 4.992187-1.339843 4.78125-2.761719 6.421875-8.878907 3.660157-13.660157l-21.902344-37.933593c-2.761719-4.785157-8.878906-6.421875-13.660156-3.660157-4.78125 2.761719-6.421876 8.875-3.660157 13.660157zm0 0"/><path d="m176.953125 426.855469c0 18.609375 15.140625 33.746093 33.746094 33.746093h90.601562c18.605469 0 33.746094-15.136718 33.746094-33.746093 0-18.605469-15.140625-33.742188-33.746094-33.742188h-90.601562c-18.605469 0-33.746094 15.136719-33.746094 33.742188zm138.09375 0c0 7.582031-6.167969 13.746093-13.746094 13.746093h-90.601562c-7.578125 0-13.746094-6.164062-13.746094-13.746093 0-7.578125 6.167969-13.742188 13.746094-13.742188h90.601562c7.578125 0 13.746094 6.164063 13.746094 13.742188zm0 0"/><path d="m266 360.535156c0-5.507812-4.492188-10-10-10s-10 4.492188-10 10c0 5.511719 4.492188 10 10 10s10-4.488281 10-10zm0 0"/></g></svg>`;
const highTemperature = `
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 width="45.654px" height="45.654px" viewBox="0 0 45.654 45.654" style="enable-background:new 0 0 45.654 45.654;"
	 xml:space="preserve">
<g>
	<g>
		<path d="M14.44,30.891V4.215c0-2.005-1.641-3.624-3.645-3.624h-0.679c-2.006,0-3.643,1.619-3.643,3.624V30.89
			c-2.318,1.372-3.938,3.925-3.938,6.849c0,4.372,3.547,7.915,7.916,7.915c4.372,0,7.923-3.543,7.923-7.915
			C18.375,34.815,16.757,32.262,14.44,30.891z M10.455,41.648c-2.158,0-3.909-1.75-3.909-3.909s1.751-3.909,3.909-3.909
			c2.161,0,3.911,1.75,3.911,3.909S12.616,41.648,10.455,41.648z"/>
		<path d="M18.211,4.802c-0.42-0.061-0.854,0.063-1.175,0.341C16.715,5.42,16.52,5.825,16.52,6.249v0.056
			c0,0.728,0.54,1.34,1.258,1.446c4.148,0.613,7.349,4.197,7.349,8.514c0,4.317-3.202,7.9-7.35,8.514
			c-0.718,0.105-1.257,0.722-1.257,1.445v0.106c0,0.41,0.187,0.801,0.497,1.07c0.31,0.269,0.727,0.391,1.134,0.331
			c5.617-0.795,9.955-5.634,9.955-11.468C28.105,10.45,23.8,5.622,18.211,4.802z"/>
		<path d="M41.631,14.799H30.712c-0.821,0-1.487,0.663-1.487,1.484s0.666,1.486,1.487,1.486h10.919c0.822,0,1.488-0.665,1.488-1.486
			C43.12,15.462,42.454,14.799,41.631,14.799z"/>
		<path d="M29.334,10.7c0.382,0,0.764-0.146,1.055-0.438l7.719-7.72c0.582-0.581,0.582-1.523,0-2.105
			c-0.582-0.581-1.523-0.581-2.104,0l-7.72,7.722c-0.582,0.581-0.582,1.521,0,2.104C28.572,10.552,28.954,10.7,29.334,10.7z"/>
		<path d="M30.387,22.471c-0.58-0.581-1.523-0.581-2.105,0s-0.582,1.524,0,2.105l7.721,7.72c0.291,0.29,0.672,0.438,1.052,0.438
			c0.384,0,0.763-0.146,1.054-0.438c0.582-0.582,0.582-1.524,0-2.104L30.387,22.471z"/>
	</g>
</g>
</svg>
`
const lowTemperature = `<svg height="512pt" viewBox="-55 0 512 512" width="512pt" xmlns="http://www.w3.org/2000/svg"><path d="m394.222656 167.4375h-43.511718c-4.140626 0-7.5 3.359375-7.5 7.5s3.359374 7.5 7.5 7.5h43.511718c4.140625 0 7.5-3.359375 7.5-7.5s-3.359375-7.5-7.5-7.5zm0 0"/><path d="m350.710938 121.652344h19.753906c4.144531 0 7.5-3.359375 7.5-7.5 0-4.144532-3.355469-7.5-7.5-7.5h-19.753906c-4.140626 0-7.5 3.355468-7.5 7.5 0 4.140625 3.359374 7.5 7.5 7.5zm0 0"/><path d="m350.710938 60.863281h26.757812c4.140625 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359375-7.5-7.5-7.5h-26.757812c-4.140626 0-7.5 3.359375-7.5 7.5 0 4.144531 3.359374 7.5 7.5 7.5zm0 0"/><path d="m377.46875 289.011719h-26.757812c-4.140626 0-7.5 3.355469-7.5 7.5 0 4.140625 3.359374 7.5 7.5 7.5h26.757812c4.140625 0 7.5-3.359375 7.5-7.5 0-4.144531-3.359375-7.5-7.5-7.5zm0 0"/><path d="m350.710938 243.222656h19.753906c4.144531 0 7.5-3.355468 7.5-7.5 0-4.140625-3.355469-7.5-7.5-7.5h-19.753906c-4.140626 0-7.5 3.359375-7.5 7.5 0 4.144532 3.359374 7.5 7.5 7.5zm0 0"/><path d="m127.109375 162.808594c12.40625 6.625 13.152344 8.125 16.453125 8.125 7.71875 0 10.378906-10.289063 3.671875-14.046875l-12.800781-7.164063 9.414062-3.855468c3.832032-1.570313 5.667969-5.953126 4.097656-9.785157-1.570312-3.832031-5.949218-5.664062-9.78125-4.097656l-20.449218 8.375-26.828125-15.023437 26.828125-15.023438c21.027344 8.414062 20.707031 8.9375 23.289062 8.9375 8.191406 0 10.425782-11.335938 2.84375-14.441406l-9.410156-3.855469 12.796875-7.167969c3.613281-2.019531 4.90625-6.59375 2.882813-10.207031-2.023438-3.613281-6.59375-4.902344-10.210938-2.878906l-12.796875 7.164062 1.632813-10.039062c.664062-4.085938-2.113282-7.941407-6.203126-8.605469-4.082031-.664062-7.941406 2.109375-8.605468 6.199219l-3.542969 21.808593-27.355469 15.316407v-31.351563l17.296875-13.746094c3.242188-2.578124 3.78125-7.292968 1.207031-10.539062-2.578124-3.242188-7.296874-3.78125-10.539062-1.203125l-7.964844 6.328125v-14.667969c0-4.140625-3.355468-7.5-7.5-7.5-4.140625 0-7.5 3.359375-7.5 7.5v14.667969l-7.960937-6.328125c-3.242188-2.578125-7.960938-2.039063-10.539063 1.207031-2.578125 3.242188-2.039062 7.957032 1.207032 10.535156l17.292968 13.75v31.347657l-27.351562-15.316407-3.546875-21.808593c-.664063-4.089844-4.515625-6.863281-8.605469-6.199219-4.085938.664062-6.863281 4.519531-6.199219 8.605469l1.632813 10.039062-12.800782-7.164062c-3.613281-2.023438-8.183593-.734375-10.207031 2.878906-2.023437 3.613281-.734375 8.1875 2.878907 10.207031l12.800781 7.167969-9.414063 3.855469c-3.832031 1.570312-5.664062 5.949218-4.097656 9.785156 1.574219 3.835938 5.957031 5.664062 9.785156 4.097656l20.445313-8.375 26.828125 15.023438-26.828125 15.019531-20.445313-8.375c-3.835937-1.566406-8.214844.265625-9.785156 4.101563-1.570312 3.832031.265625 8.210937 4.097656 9.78125l9.414063 3.855468-12.800781 7.167969c-6.707032 3.753906-4.042969 14.042969 3.671874 14.042969 3.300782 0 4.054688-1.503906 16.457032-8.125l-1.632813 10.042968c-.742187 4.5625 2.78125 8.703126 7.414063 8.703126 3.609375 0 6.792968-2.617188 7.390625-6.296876l3.546875-21.808593 27.351562-15.316407v31.347657l-17.292968 13.75c-3.246094 2.574219-3.785157 7.292969-1.207032 10.535156 2.578125 3.246094 7.296875 3.785156 10.539063 1.207031l7.960937-6.328125v14.667969c0 4.140625 3.359375 7.5 7.5 7.5 4.144532 0 7.5-3.359375 7.5-7.5v-14.667969c6.925782 5.015625 8.417969 7.957031 12.625 7.957031 7.070313-.003906 10.230469-8.957031 4.671875-13.371093l-17.296875-13.75v-31.347657l27.355469 15.316407 3.542969 21.808593c.597656 3.679688 3.78125 6.296876 7.394531 6.296876 4.640625 0 8.152344-4.152344 7.414063-8.703126zm0 0"/><path d="m318.148438 309.804688v-241.964844c0-37.40625-30.429688-67.839844-67.835938-67.839844s-67.839844 30.433594-67.839844 67.839844v241.964844c-28.023437 21.226562-44.636718 54.46875-44.636718 89.71875 0 62.019531 50.457031 112.476562 112.476562 112.476562s112.476562-50.457031 112.476562-112.476562c0-35.25-16.613281-68.492188-44.640624-89.71875zm-67.835938 187.195312c-53.75 0-97.476562-43.726562-97.476562-97.476562 0-31.6875 15.496093-61.511719 41.453124-79.773438 1.996094-1.40625 3.183594-3.695312 3.183594-6.136719v-245.773437c0-29.136719 23.703125-52.839844 52.839844-52.839844 29.132812 0 52.835938 23.703125 52.835938 52.839844v245.773437c0 2.441407 1.1875 4.730469 3.183593 6.136719 25.960938 18.265625 41.457031 48.085938 41.457031 79.773438 0 53.75-43.730468 97.476562-97.476562 97.476562zm0 0"/><path d="m283.140625 324.667969v-256.828125c0-18.105469-14.726563-32.832032-32.828125-32.832032s-32.832031 14.726563-32.832031 32.832032v23.222656c0 4.140625 3.359375 7.5 7.5 7.5 4.144531 0 7.5-3.359375 7.5-7.5v-23.222656c0-9.832032 8-17.832032 17.832031-17.832032s17.828125 8 17.828125 17.832032v222.253906h-35.660156v-168.960938c0-4.144531-3.355469-7.5-7.5-7.5-4.140625 0-7.5 3.355469-7.5 7.5v203.535157c-28.417969 12.808593-47.167969 41.484375-47.167969 72.949219 0 44.113281 35.886719 80 79.996094 80 44.113281 0 80-35.886719 80-80 .003906-31.464844-18.75-60.140626-47.167969-72.949219zm-32.828125 137.949219c-35.84375 0-65-29.15625-65-65 0-27 16.992188-51.476563 42.289062-60.898438 2.933594-1.09375 4.882813-3.898438 4.882813-7.027344v-24.597656h35.65625v24.597656c0 3.128906 1.949219 5.933594 4.882813 7.027344 25.296874 9.421875 42.289062 33.894531 42.289062 60.898438 0 35.84375-29.160156 65-65 65zm0 0"/></svg>`;
const sunriseSvg = `<svg height="512pt" viewBox="0 -80 512 512" width="512pt" xmlns="http://www.w3.org/2000/svg"><path d="m269.539062 93.5625c21.273438 2.257812 41.851563 9.828125 59.507813 21.882812 1.296875.882813 2.765625 1.308594 4.222656 1.308594 2.394531 0 4.75-1.148437 6.203125-3.273437 2.335938-3.421875 1.453125-8.085938-1.964844-10.421875-19.699218-13.449219-42.65625-21.890625-66.386718-24.414063-4.113282-.429687-7.8125 2.546875-8.25 6.667969-.4375 4.117188 2.546875 7.8125 6.667968 8.25zm0 0"/><path d="m255.601562 44.707031c4.140626 0 7.5-3.355469 7.5-7.5v-29.707031c0-4.144531-3.359374-7.5-7.5-7.5-4.144531 0-7.5 3.355469-7.5 7.5v29.707031c0 4.144531 3.355469 7.5 7.5 7.5zm0 0"/><path d="m156.089844 65.882812c1.386718 2.40625 3.910156 3.75 6.5 3.75 1.273437 0 2.5625-.324218 3.746094-1.003906 3.585937-2.074218 4.8125-6.660156 2.742187-10.246094l-14.851563-25.730468c-2.074218-3.585938-6.660156-4.8125-10.246093-2.746094-3.585938 2.074219-4.816407 6.660156-2.746094 10.246094zm0 0"/><path d="m65.015625 121.863281 25.726563 14.855469c1.183593.679688 2.472656 1.003906 3.742187 1.003906 2.59375 0 5.113281-1.34375 6.503906-3.75 2.070313-3.585937.839844-8.171875-2.746093-10.246094l-25.726563-14.851562c-3.589844-2.070312-8.175781-.84375-10.246094 2.742188-2.070312 3.589843-.84375 8.175781 2.746094 10.246093zm0 0"/><path d="m434.128906 223.238281c0 4.144531 3.359375 7.5 7.5 7.5h29.710938c4.140625 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359375-7.5-7.5-7.5h-29.710938c-4.140625 0-7.5 3.359375-7.5 7.5zm0 0"/><path d="m39.859375 230.738281h29.710937c4.140626 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359374-7.5-7.5-7.5h-29.710937c-4.140625 0-7.5 3.359375-7.5 7.5 0 4.144531 3.359375 7.5 7.5 7.5zm0 0"/><path d="m416.714844 137.722656c1.269531 0 2.5625-.324218 3.742187-1.003906l25.730469-14.855469c3.585938-2.070312 4.816406-6.65625 2.742188-10.246093-2.070313-3.585938-6.65625-4.8125-10.242188-2.742188l-25.730469 14.851562c-3.585937 2.074219-4.816406 6.660157-2.746093 10.246094 1.390624 2.40625 3.910156 3.75 6.503906 3.75zm0 0"/><path d="m344.863281 68.628906c1.183594.679688 2.472657 1.003906 3.746094 1.003906 2.589844 0 5.113281-1.34375 6.5-3.75l14.855469-25.730468c2.070312-3.585938.839844-8.171875-2.746094-10.246094-3.585938-2.070312-8.171875-.839844-10.246094 2.746094l-14.851562 25.730468c-2.070313 3.585938-.84375 8.171876 2.742187 10.246094zm0 0"/><path d="m191.210938 289.777344h-121.640626c-4.144531 0-7.5 3.359375-7.5 7.5 0 4.144531 3.355469 7.5 7.5 7.5h121.640626c4.140624 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359376-7.5-7.5-7.5zm0 0"/><path d="m379.9375 315.121094h-81.9375c-4.140625 0-7.5 3.359375-7.5 7.5 0 4.144531 3.359375 7.5 7.5 7.5h81.9375c4.140625 0 7.5-3.355469 7.5-7.5 0-4.140625-3.355469-7.5-7.5-7.5zm0 0"/><path d="m423.601562 337.734375h-25.636718c-4.140625 0-7.5 3.359375-7.5 7.5 0 4.144531 3.359375 7.5 7.5 7.5h25.636718c4.140626 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359374-7.5-7.5-7.5zm0 0"/><path d="m504.5 257.226562h-107.484375c2.65625-11.085937 4.015625-22.476562 4.015625-33.988281 0-36.105469-13.328125-70.730469-37.523438-97.496093-2.777343-3.070313-7.519531-3.308594-10.59375-.53125-3.070312 2.777343-3.3125 7.519531-.53125 10.59375 21.699219 24 33.648438 55.054687 33.648438 87.433593 0 11.546875-1.503906 22.957031-4.472656 33.988281h-185.300782c-4.140624 0-7.5 3.359376-7.5 7.5 0 4.144532 3.359376 7.5 7.5 7.5h308.242188c4.140625 0 7.5-3.355468 7.5-7.5 0-4.140624-3.359375-7.5-7.5-7.5zm0 0"/><path d="m170.136719 264.726562c0-4.144531-3.359375-7.5-7.5-7.5h-32.980469c-2.964844-11.027343-4.488281-22.449218-4.488281-33.988281 0-65.335937 48.78125-120.9375 113.46875-129.335937 4.105469-.53125 7.003906-4.292969 6.46875-8.402344-.53125-4.105469-4.289063-7.003906-8.402344-6.472656-72.136719 9.367187-126.535156 71.363281-126.535156 144.210937 0 11.5 1.355469 22.902344 4.007812 33.988281h-106.675781c-4.140625 0-7.5 3.355469-7.5 7.5 0 4.140626 3.359375 7.5 7.5 7.5h155.136719c4.140625 0 7.5-3.359374 7.5-7.5zm0 0"/></svg>`;
const sunsetSvg = `
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
<g>
	<g>
		<path d="M504.5,328.661c-22.118,0-33.314,4.332-44.142,8.521c-9.982,3.862-19.412,7.511-38.729,7.511
			c-19.318,0-28.747-3.648-38.73-7.511c-10.827-4.189-22.023-8.521-44.142-8.521c-22.105,0-33.294,4.333-44.115,8.522
			c-9.975,3.862-19.397,7.51-38.699,7.51c-19.31,0-28.735-3.648-38.713-7.51c-10.824-4.19-22.016-8.522-44.127-8.522
			c-22.104,0-33.293,4.333-44.114,8.522c-9.975,3.862-19.396,7.51-38.698,7.51c-19.296,0-28.715-3.648-38.687-7.51
			c-10.818-4.19-22.004-8.522-44.104-8.522c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5
			c19.296,0,28.714,3.648,38.687,7.51c10.818,4.19,22.004,8.522,44.104,8.522c22.104,0,33.293-4.333,44.114-8.522
			c9.975-3.862,19.396-7.51,38.698-7.51c19.309,0,28.734,3.648,38.712,7.51c10.824,4.19,22.017,8.522,44.128,8.522
			c22.105,0,33.294-4.333,44.115-8.522c9.975-3.862,19.397-7.51,38.699-7.51c19.317,0,28.747,3.648,38.729,7.511
			c10.828,4.189,22.024,8.521,44.143,8.521s33.314-4.332,44.142-8.521c9.982-3.862,19.412-7.511,38.729-7.511
			c4.142,0,7.5-3.358,7.5-7.5C512,332.019,508.642,328.661,504.5,328.661z"/>
	</g>
</g>
<g>
	<g>
		<path d="M471.418,373.02c-1.49-3.865-5.833-5.79-9.696-4.3l-1.367,0.528c-4.515,1.747-8.78,3.397-13.855,4.715
			c-4.009,1.042-6.415,5.136-5.374,9.145c0.877,3.377,3.92,5.616,7.254,5.616c0.625,0,1.259-0.079,1.891-0.243
			c5.912-1.536,10.784-3.421,15.497-5.245l1.349-0.521C470.982,381.225,472.908,376.884,471.418,373.02z"/>
	</g>
</g>
<g>
	<g>
		<path d="M416.593,376.67c-16.001-0.577-24.595-3.902-33.694-7.423c-10.828-4.189-22.024-8.521-44.142-8.521
			c-22.105,0-33.294,4.333-44.115,8.522c-9.975,3.862-19.397,7.51-38.699,7.51c-19.31,0-28.734-3.648-38.713-7.511
			c-10.824-4.189-22.016-8.522-44.127-8.522c-22.104,0-33.293,4.333-44.114,8.522c-9.077,3.515-17.651,6.834-33.587,7.419
			c-4.14,0.152-7.372,3.631-7.22,7.77c0.152,4.14,3.632,7.363,7.77,7.22c18.454-0.677,28.622-4.614,38.454-8.421
			c9.975-3.862,19.396-7.51,38.698-7.51c19.309,0,28.734,3.648,38.712,7.511c10.824,4.189,22.017,8.522,44.128,8.522
			c22.105,0,33.294-4.333,44.115-8.522c9.975-3.862,19.397-7.51,38.699-7.51c19.317,0,28.747,3.648,38.729,7.511
			c9.855,3.813,20.045,7.756,38.566,8.424c4.113,0.147,7.616-3.085,7.765-7.225C423.967,380.296,420.732,376.819,416.593,376.67z"/>
	</g>
</g>
<g>
	<g>
		<path d="M338.757,392.791c-22.105,0-33.294,4.333-44.115,8.522c-9.975,3.862-19.397,7.51-38.699,7.51
			c-19.31,0-28.734-3.648-38.713-7.51c-10.824-4.19-22.016-8.522-44.127-8.522c-4.142,0-7.5,3.358-7.5,7.5
			c0,4.142,3.358,7.5,7.5,7.5c19.309,0,28.734,3.648,38.713,7.51c10.824,4.19,22.016,8.522,44.127,8.522
			c22.105,0,33.294-4.333,44.115-8.522c9.975-3.862,19.397-7.51,38.699-7.51c4.142,0,7.5-3.358,7.5-7.5
			C346.257,396.149,342.899,392.791,338.757,392.791z"/>
	</g>
</g>
<g>
	<g>
		<path d="M65.511,373.981c-5.105-1.323-9.384-2.981-13.914-4.736c-3.862-1.496-8.207,0.422-9.703,4.284
			c-1.496,3.863,0.422,8.207,4.284,9.703c4.73,1.832,9.621,3.727,15.569,5.269c0.631,0.164,1.264,0.242,1.887,0.242
			c3.335,0,6.379-2.242,7.255-5.62C71.929,379.113,69.521,375.021,65.511,373.981z"/>
	</g>
</g>
<g>
	<g>
		<path d="M354.282,227.687c-22.407-32.143-59.147-51.333-98.281-51.333c-66.017,0-119.726,53.708-119.726,119.726
			c-0.001,2.849,0.1,5.724,0.3,8.545c0.279,3.952,3.572,6.972,7.474,6.972c0.178,0,0.356-0.006,0.536-0.019
			c4.132-0.292,7.245-3.878,6.953-8.01c-0.175-2.472-0.263-4.991-0.263-7.488c0-57.746,46.979-104.726,104.726-104.726
			c34.231,0,66.372,16.789,85.975,44.911c2.369,3.397,7.043,4.231,10.442,1.864C355.816,235.76,356.65,231.085,354.282,227.687z"/>
	</g>
</g>
<g>
	<g>
		<path d="M103.694,288.581H55.597c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h48.097c4.142,0,7.5-3.358,7.5-7.5
			C111.194,291.939,107.836,288.581,103.694,288.581z"/>
	</g>
</g>
<g>
	<g>
		<path d="M256,88.177c-4.142,0-7.5,3.358-7.5,7.5v48.097c0,4.143,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5V95.677
			C263.5,91.535,260.142,88.177,256,88.177z"/>
	</g>
</g>
<g>
	<g>
		<path d="M403.01,149.071c-2.929-2.929-7.678-2.929-10.606,0l-34.01,34.01c-2.929,2.929-2.929,7.678,0,10.606
			c1.464,1.464,3.383,2.197,5.303,2.197c1.919,0,3.839-0.732,5.303-2.197l34.01-34.01
			C405.939,156.748,405.939,151.999,403.01,149.071z"/>
	</g>
</g>
<g>
	<g>
		<path d="M204.644,152.498l-6.135-14.812c-1.585-3.827-5.972-5.643-9.799-4.059c-3.827,1.585-5.644,5.973-4.059,9.799l6.135,14.812
			c1.196,2.888,3.989,4.632,6.932,4.632c0.957,0,1.929-0.184,2.867-0.573C204.412,160.712,206.229,156.324,204.644,152.498z"/>
	</g>
</g>
<g>
	<g>
		<path d="M418.454,228.791c-1.585-3.826-5.972-5.644-9.799-4.059l-14.812,6.135c-3.827,1.584-5.644,5.972-4.059,9.799
			c1.196,2.888,3.989,4.632,6.932,4.632c0.957,0,1.929-0.184,2.867-0.573l14.812-6.135
			C418.222,237.005,420.039,232.617,418.454,228.791z"/>
	</g>
</g>
<g>
	<g>
		<path d="M323.29,133.627c-3.826-1.585-8.214,0.232-9.799,4.059l-6.135,14.812c-1.585,3.826,0.232,8.213,4.059,9.799
			c0.938,0.389,1.911,0.573,2.867,0.573c2.943,0,5.736-1.744,6.932-4.632l6.135-14.812
			C328.934,139.599,327.117,135.212,323.29,133.627z"/>
	</g>
</g>
<g>
	<g>
		<path d="M118.157,230.866l-14.812-6.135c-3.828-1.585-8.214,0.232-9.799,4.059c-1.585,3.827,0.232,8.214,4.059,9.799l14.812,6.135
			c0.939,0.389,1.911,0.573,2.867,0.573c2.943,0,5.736-1.744,6.932-4.632C123.801,236.838,121.984,232.451,118.157,230.866z"/>
	</g>
</g>
<g>
	<g>
		<path d="M116.862,136.275c-11.078,0-21.775,3.692-30.589,10.481c-4.015-1.257-8.153-1.893-12.354-1.893
			c-23.079,0-41.855,18.776-41.855,41.855c0,4.142,3.358,7.5,7.5,7.5h120.242c4.142,0,7.5-3.358,7.5-7.5
			C167.306,158.904,144.677,136.275,116.862,136.275z M48.13,179.217c3.253-11.169,13.583-19.354,25.789-19.354
			c3.695,0,7.331,0.778,10.807,2.313c2.739,1.209,5.934,0.674,8.129-1.362c6.634-6.152,15.161-9.54,24.008-9.54
			c16.971,0,31.194,11.99,34.646,27.943H48.13z"/>
	</g>
</g>
<g>
	<g>
		<path d="M381.968,262.242c-4.201,0-8.339,0.635-12.354,1.893c-8.814-6.789-19.512-10.481-30.589-10.481
			c-27.815,0-50.444,22.629-50.444,50.443c0,4.142,3.358,7.5,7.5,7.5h120.242c4.142,0,7.5-3.358,7.5-7.5
			C423.823,281.018,405.047,262.242,381.968,262.242z M304.379,296.597c3.451-15.953,17.675-27.943,34.646-27.943
			c8.847,0,17.373,3.388,24.008,9.54c2.196,2.035,5.389,2.569,8.128,1.361c3.476-1.535,7.112-2.313,10.807-2.313
			c12.206,0,22.536,8.185,25.79,19.355H304.379z"/>
	</g>
</g>
</svg>
`;
const wind = `<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
viewBox="0 0 368 368" style="enable-background:new 0 0 368 368;" xml:space="preserve">
<g>
<g>
   <path d="M296,48c-39.704,0-72,32.304-72,72c0,4.416,3.576,8,8,8s8-3.584,8-8c0-30.88,25.128-56,56-56s56,25.12,56,56
       s-25.128,56-56,56H8c-4.416,0-8,3.584-8,8s3.584,8,8,8h288c39.704,0,72-32.304,72-72S335.704,48,296,48z"/>
</g>
</g>
<g>
<g>
   <path d="M144,32c-30.88,0-56,25.12-56,56c0,4.416,3.584,8,8,8s8-3.584,8-8c0-22.056,17.944-40,40-40c22.056,0,40,17.944,40,40
       c0,22.056-17.944,40-40,40H8c-4.416,0-8,3.584-8,8s3.584,8,8,8h136c30.88,0,56-25.12,56-56S174.88,32,144,32z"/>
</g>
</g>
<g>
<g>
   <path d="M280,224H8c-4.416,0-8,3.584-8,8c0,4.416,3.584,8,8,8h272c22.056,0,40,17.944,40,40c0,22.056-17.944,40-40,40
       c-22.056,0-40-17.944-40-40c0-4.416-3.576-8-8-8s-8,3.584-8,8c0,30.88,25.128,56,56,56s56-25.12,56-56S310.872,224,280,224z"/>
</g>
</g>
<g>
</svg>
`;
const visibility = `<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
<g>
<g>
   <path d="M487.464,232.092c-4.15-5.321-11.825-6.267-17.147-2.12c-5.32,4.15-6.269,11.826-2.12,17.147
       c4.078,5.23,4.078,12.533,0,17.763c-29.884,38.315-68.55,67.106-112.08,84.513c22.879-24.497,36.888-57.346,36.888-93.395
       c0-35.907-13.892-68.638-36.576-93.083c25.153,10.114,48.798,24.014,69.966,41.37c2.627,2.153,5.246,4.386,7.79,6.638
       c5.052,4.473,12.772,4.003,17.245-1.048c4.473-5.051,4.003-12.773-1.048-17.245c-2.773-2.457-5.632-4.892-8.496-7.239
       c-52.22-42.815-118.237-66.394-185.886-66.394c-91.043,0-175.408,41.221-231.463,113.094c-10.979,14.077-10.979,33.74,0,47.818
       c56.055,71.873,140.42,113.094,231.463,113.094c91.041,0,175.407-41.221,231.464-113.094
       C498.443,265.831,498.443,246.169,487.464,232.092z M43.804,264.882c-4.078-5.23-4.078-12.533,0-17.763
       c29.877-38.308,68.535-67.095,112.057-84.504C133.006,187.1,118.995,219.936,118.995,256c0,36.051,14.01,68.9,36.865,93.386
       C112.339,331.977,73.68,303.19,43.804,264.882z M256.149,368.567c-0.049,0-0.098,0.001-0.148,0.001
       c-0.05,0-0.098-0.001-0.148-0.001c-62.007-0.08-112.424-50.542-112.424-112.567s50.416-112.487,112.424-112.567
       c0.049,0,0.098-0.001,0.148-0.001c0.038,0,0.076,0.001,0.114,0.001c62.022,0.061,112.457,50.53,112.457,112.567
       C368.572,318.025,318.156,368.487,256.149,368.567z"/>
</g>
</g>
<g>
<g>
   <path d="M256.001,204.16c-28.587,0-51.84,23.253-51.84,51.84s23.253,51.84,51.84,51.84s51.84-23.253,51.84-51.84
       S284.588,204.16,256.001,204.16z M256.001,283.406c-15.108,0-27.406-12.298-27.406-27.406s12.298-27.406,27.406-27.406
       s27.406,12.298,27.406,27.406S271.109,283.406,256.001,283.406z"/>
</g>
</g>
<g>
<g>
   <path d="M256.001,0c-6.748,0-12.217,5.469-12.217,12.217V58.03c0,6.748,5.469,12.217,12.217,12.217s12.217-5.469,12.217-12.217
       V12.217C268.218,5.469,262.748,0,256.001,0z"/>
</g>
</g>
<g>
<g>
   <path d="M256.001,441.753c-6.748,0-12.217,5.469-12.217,12.217v45.813c0,6.748,5.469,12.217,12.217,12.217
       s12.217-5.469,12.217-12.217V453.97C268.218,447.222,262.747,441.753,256.001,441.753z"/>
</g>
</g>
<g>
<g>
   <path d="M437.021,74.98c-4.771-4.77-12.505-4.77-17.279,0l-22.795,22.795c-4.771,4.771-4.771,12.506,0,17.279
       c2.386,2.385,5.511,3.578,8.639,3.578c3.126,0,6.252-1.193,8.639-3.578l22.797-22.795
       C441.792,87.488,441.792,79.753,437.021,74.98z"/>
</g>
</g>
<g>
<g>
   <path d="M115.055,396.946c-4.77-4.769-12.505-4.77-17.277,0l-22.797,22.795c-4.771,4.771-4.771,12.506,0,17.279
       c2.386,2.385,5.513,3.578,8.639,3.578s6.252-1.193,8.639-3.578l22.797-22.795C119.826,409.453,119.826,401.719,115.055,396.946z"
       />
</g>
</g>
<g>
<g>
   <path d="M115.055,97.776L92.258,74.98c-4.771-4.77-12.506-4.77-17.277,0c-4.771,4.773-4.77,12.507,0,17.279l22.797,22.795
       c2.385,2.385,5.513,3.578,8.639,3.578s6.254-1.193,8.639-3.578C119.826,110.281,119.825,102.547,115.055,97.776z"/>
</g>
</g>
<g>
<g>
   <path d="M437.019,419.741l-22.795-22.795c-4.773-4.77-12.506-4.77-17.279,0c-4.771,4.773-4.771,12.507,0,17.279l22.797,22.795
       c2.386,2.385,5.513,3.578,8.639,3.578c3.126,0,6.252-1.193,8.639-3.578C441.791,432.247,441.791,424.512,437.019,419.741z"/>
</g>
</g>
</svg>
`;
const clouds = `
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 60 60" style="enable-background:new 0 0 60 60;" xml:space="preserve">
<path d="M50.976,26.194C50.447,17.194,43.028,10,34.085,10c-5.43,0-10.688,2.663-13.946,7.008c-0.075-0.039-0.154-0.066-0.23-0.102
	c-0.198-0.096-0.399-0.187-0.604-0.269c-0.114-0.045-0.228-0.086-0.343-0.126c-0.203-0.071-0.409-0.134-0.619-0.191
	c-0.115-0.031-0.229-0.063-0.345-0.089c-0.225-0.051-0.455-0.09-0.687-0.125c-0.101-0.015-0.2-0.035-0.302-0.046
	C16.677,16.023,16.341,16,16,16c-4.963,0-9,4.037-9,9c0,0.127,0.008,0.252,0.016,0.377v0.004C2.857,27.649,0,32.399,0,37.154
	C0,44.237,5.762,50,12.845,50h24.508c0.104,0,0.207-0.006,0.311-0.014l0.062-0.008l0.134,0.008C37.962,49.994,38.064,50,38.169,50
	h9.803C54.604,50,60,44.604,60,37.972C60,32.483,56.173,27.56,50.976,26.194z M47.972,48h-9.803c-0.059,0-0.116-0.005-0.174-0.009
	l-0.271-0.011l-0.198,0.011C37.469,47.995,37.411,48,37.353,48H12.845C6.865,48,2,43.135,2,37.154C2,33,4.705,28.688,8.433,26.901
	L9,26.63V26c0-0.127,0.008-0.256,0.015-0.386l0.009-0.16l-0.012-0.21C9.006,25.163,9,25.082,9,25c0-3.859,3.141-7,7-7
	c0.309,0,0.614,0.027,0.917,0.067c0.078,0.01,0.156,0.023,0.233,0.036c0.267,0.044,0.53,0.102,0.789,0.177
	c0.035,0.01,0.071,0.017,0.106,0.027c0.285,0.087,0.563,0.197,0.835,0.321c0.071,0.032,0.14,0.067,0.21,0.101
	c0.24,0.119,0.475,0.249,0.702,0.396C21.719,20.373,23,22.538,23,25c0,0.553,0.447,1,1,1s1-0.447,1-1c0-2.754-1.246-5.219-3.2-6.871
	C24.667,14.379,29.388,12,34.085,12c7.745,0,14.177,6.135,14.848,13.888c-1.022-0.072-2.552-0.109-4.083,0.124
	c-0.546,0.083-0.921,0.593-0.838,1.139c0.075,0.495,0.501,0.85,0.987,0.85c0.05,0,0.101-0.004,0.151-0.012
	c2.227-0.337,4.548-0.021,4.684-0.002C54.49,28.872,58,33.161,58,37.972C58,43.501,53.501,48,47.972,48z"/>
<g>
</svg>
`;
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: [],
        datasets: [{
            fill: true,
            label: 'Forecast For 5 Days',
            data: [],
            backgroundColor: [
                // 'rgb(88, 239, 229)',
                // 'rgb(82, 96, 229)',
                'rgb(249, 249, 47)'

            ],
            borderColor: [
                'rgb(135, 135, 13)'
            ],
            borderWidth: 2,
            // borderCapStyle:'butt',
            // borderJoinStyle:'milter'
            pointBackgroundColor:
                // 'rgb(88, 239, 229)'
                'rgb(160, 160, 36)'

        }]
    },
    options: {
        responsive: true
    }
})

newTableRow.setAttribute('class', 'weatherData');
newTableRow2.setAttribute('class', 'weatherData');
newTableRow3.setAttribute('class', 'weatherData');
newTableRow4.setAttribute('class', 'weatherData');
newTableRow5.setAttribute('class', 'weatherData');
newTableRow6.setAttribute('class', 'weatherData');
newTableRow7.setAttribute('class', 'weatherData');
newTableRow8.setAttribute('class', 'weatherData');
newTableRow9.setAttribute('class', 'weatherData');
newTableRow10.setAttribute('class', 'weatherData');

var newTd = document.createElement('h4');
var newTd2 = document.createElement('h4');

var newTd3 = document.createElement('h4');
var newTd4 = document.createElement('h4');

var newTd5 = document.createElement('h4');
var newTd6 = document.createElement('h4');

var newTd7 = document.createElement('h4');
var newTd8 = document.createElement('h4');

var newTd9 = document.createElement('h4');
var newTd9 = document.createElement('h4');
var newTd10 = document.createElement('h4');


srhBtn.addEventListener('click', getWeatherInfo);
search.addEventListener('keyup', function (e) {
    if (e.keyCode === 13) {
        getWeatherInfo();
    }
})
// searchCountry.addEventListener('input', function () {
//     srhCountry = true;
// })
searchzipcountry.addEventListener('input', function () {
    zipCountry = true;
})
burger.addEventListener('click', function () {
    refresh = !refresh;
    if (refresh) {
        nav_con.classList.add('addBrush');
        // navbar_wrapper.classList.add('overlay')
        nav_con.classList.remove('hidebrush');
    } else {
        nav_con.classList.add('hidebrush');
        nav_con.classList.remove('addBrush');
        // navbar_wrapper.classList.remove('overlay')
    }
})

city.addEventListener('click', function () {
    input_wrapper.style.display = 'block';
    input_wrapper2.style.display = 'none';
    input_wrapper3.style.display = 'none';

    citySearch = true;
    srhCountry = true;
    zipCountry = false;
    zipCode = false;
    lat = false
    lon = false;
})
zip.addEventListener('click', function () {
    input_wrapper.style.display = 'none';
    input_wrapper2.style.display = 'none';
    input_wrapper3.style.display = 'block';
    zipCode = true;
    zipCountry = true;
    citySearch = false;
    srhCountry = false;
    lat = false
    lon = false;
})
lat_lon.addEventListener('click', function () {
    input_wrapper.style.display = 'none';
    input_wrapper2.style.display = 'block';
    input_wrapper3.style.display = 'none';
    lat = true
    lon = true;
    citySearch = false;
    srhCountry = false;
    zipCountry = false;
    zipCode = false;
})
celsius.addEventListener('click', function () {
    unitsCelsius = true;
    unitsfahren = false;
    tempMetric = '°c';
})
fahrenheit.addEventListener('click', function () {
    unitsCelsius = false;
    unitsfahren = true;
    tempMetric = '°f';
})
kelvin.addEventListener('click', function () {
    unitsCelsius = false;
    unitsfahren = false;
    tempMetric = '°k';
})
const appId = true;
var unitsCelsius = true;
var unitsfahren = false;
var citySearch = true;
// var srhCountry = false;
var zipCode = false;
var lat = false;
var lon = false;
var zipCountry = false;
//searchLat_lonInput
//searchzipcountry
function getWeatherInfo() {
    var queryString = 'https://api.openweathermap.org/data/2.5/weather?';
    var inputqstr;
    if (citySearch) {
        inputqstr = getCityQuery();
        if (inputqstr === '') {
            return console.log('empty city');
        }
        queryString += inputqstr;
    } else if (zipCode) {
        inputqstr = getzipQuery();
        if (inputqstr === '') {
            return console.log('empty zip or zip country');
        }
        queryString += inputqstr;
    } else if (lat) {
        inputqstr = getLatLonQuery();
        if (inputqstr === '') {
            return console.log('empty latitude or longitude');
        }
        queryString += inputqstr;
    }
    if (unitsCelsius) {
        queryString += `&units=metric`;
    }
    if (unitsfahren) {
        queryString += `&units=imperial`;
    }
    if (appId) {
        queryString += '&APPID=9caa606e6bf0f14360fe339828c4022a';
    }
    console.log(queryString);
    fetch(queryString)
        .then(res => {
            return res.json();
        }).then(data => {
            console.log(data);
            refreshUi(data);
            //chart
            var queryForecastString = `https://api.openweathermap.org/data/2.5/forecast?`;
            var inputqstr;
            if (citySearch) {
                inputqstr = getCityQuery();
                if (inputqstr === '') {
                    return console.log('empty city');
                }
                queryForecastString += inputqstr;
            } else if (zipCode) {
                inputqstr = getzipQuery();
                if (inputqstr === '') {
                    return console.log('empty zip or zip country');
                }
                queryForecastString += inputqstr;
            } else if (lat) {
                inputqstr = getLatLonQuery();
                if (inputqstr === '') {
                    return console.log('empty latitude or longitude');
                }
                queryForecastString += inputqstr;
            }
            if (appId) {
                queryForecastString += '&APPID=9caa606e6bf0f14360fe339828c4022a';
            }
            return fetch(queryForecastString);
        })
        .then((res) => {
            return res.json();
        })
        .then(
            data => {
                var tempArray = [];
                var timeArray = [];
                console.log('Forecast data ', data);
                var offset = data.city.timezone;
                data.list.forEach((element) => {
                    let forecastTemp = ''
                    if (unitsCelsius) {
                        forecastTemp = Math.floor(element.main.temp - 273.15)
                    } else if (unitsfahren) {
                        forecastTemp = Math.floor(element.main.temp * 9 / 5 - 459.67)
                    } else {
                        forecastTemp = element.main.temp;
                    }
                    tempArray.push(forecastTemp);
                    var date_Timestamp = element.dt * 1000;
                    var date = new Date(date_Timestamp);
                    console.log(date);
                    timeArray.push(date.getDate() + '-' + (date.getMonth() + 1) + '-' + moment.unix(element.dt + offset).utc().format('LT'));
                    console.log(timeArray);

                })
                document.querySelector('.chartWrapper').style.display='block';
                removeAllData(myChart);
                var size = timeArray.length;
                for (var i = 0; i < size; i++) {
                    addData(myChart, timeArray[i], tempArray[i]);
                }
                console.log(tempArray);
            }
        )
        .catch((err) => {
            console.log(err);
        })
}

function gettime(date, data) {
    // var date = new Date(timestamp);
    // var hours = timestamp.getHours();
    // var minutes = timestamp.getMinutes();
    var offset = data.city.timezone;
    return moment.unix(date + offset).utc().format('LT');
    // var ampm = hours >= 12 ? "pm" : "am";
    // hours = hours % 12;
    // hours = hours ? hours : 12; // the hour '0' should be '12'
    // minutes = minutes < 10 ? "0" + minutes : minutes;
    // var strTime = hours + ":" + minutes + " " + ampm;
    // var newconvertedtimstamp =
    //     timestamp.getDate() +
    //     "-" +
    //     (timestamp.getMonth() + 1) +
    //     "-" +
    //     strTime;
    // return newconvertedtimstamp;

}

function getWindDegree(degree) {
    //need to be rewrite
    if (degree == '' || degree == null || degree == undefined) {
        return '';
    }
    if (degree >= 350 && degree == 360 && degree <= 10) {
        return 'N';
    } else if (degree >= 20 && degree <= 30) {
        return 'N/NE';
    } else if (degree >= 30 && degree <= 40) {
        return 'N/NE';
    } else if (degree >= 40 && degree <= 50) {
        return 'NE';
    } else if (degree >= 50 && degree <= 60) {
        return 'NE';
    } else if (degree >= 60 && degree <= 70) {
        return 'E/NE';
    } else if (degree >= 70 && degree <= 80) {
        return 'E/NE';
    } else if (degree >= 80 && degree <= 100) {
        return 'E';
    } else if (degree >= 100 && degree <= 110) {
        return 'E';
    } else if (degree >= 110 && degree <= 120) {
        return 'E/SE';
    } else if (degree >= 120 && degree <= 130) {
        return 'E/SE';
    } else if (degree >= 130 && degree <= 140) {
        return 'SE';
    } else if (degree >= 140 && degree <= 150) {
        return 'SE';
    } else if (degree >= 150 && degree <= 160) {
        return 'S/SE';
    } else if (degree >= 160 && degree <= 170) {
        return 'S/SE';
    } else if (degree >= 170 && degree <= 190) {
        return 'S';
    } else if (degree >= 190 && degree <= 200) {
        return 'S';
    } else if (degree >= 200 && degree <= 210) {
        return 'S/SW';
    } else if (degree >= 210 && degree <= 230) {
        return 'SW';
    } else if (degree >= 230 && degree <= 250) {
        return 'W/SW';
    } else if (degree >= 250 && degree <= 280) {
        return 'W';
    } else if (degree >= 280 && degree <= 290) {
        return 'W/NW';
    } else if (degree >= 290 && degree <= 310) {
        return 'NW';
    } else if (degree >= 310 && degree <= 320) {
        return 'N/W';
    } else if (degree >= 320 && degree <= 330) {
        return 'N/W';
    } else if (degree >= 330 && degree <= 340) {
        return 'N/NW';
    }
}

function getVisibilityFromMeterInValue(visibilityInMeter) {
    return visibilityInMeter / 1000;
}

function refreshUi(data) {
    var we_wra = document.querySelector('.weather-wrapper');
    we_wra.style.display = 'block';
    tempHead.innerHTML = Math.floor(data.main.temp) + tempMetric;
    var offset = data.timezone;
    var sunrise = data.sys.sunrise;
    var sunset = data.sys.sunset;
    newTd.innerHTML = 'Humidity : ' + data.main.humidity + "%";
    newTd2.innerHTML = ' Sunrise :' + moment.unix(sunrise + offset).utc().format('LT');
    newTd4.innerHTML = ' Sunset :' + moment.unix(sunset + offset).utc().format('LT');
    newTd3.innerHTML = 'Pressure : ' + data.main.pressure + ' mb';
    cityName.innerHTML = data.name;
    newTd6.innerHTML = 'Wind :' + data.wind.speed + 'km/h ' + getWindDegree(data.wind.deg);
    newTd5.innerHTML = 'Temp : ' + Math.floor(data.main.temp) + tempMetric;
    newTd7.innerHTML = 'Temp Max : ' + data.main.temp_max + tempMetric;
    newTd9.innerHTML = 'Temp Min : ' + data.main.temp_min + tempMetric;
    newTd8.innerHTML = 'Visibility :' + getVisibilityFromMeterInValue(data.visibility) + ' km';
    newTd10.innerHTML = 'Clouds : ' + data.clouds.all + '%';

    data.weather.forEach((element) => {
        console.log('weather info ' + element.description);
        weatherDes.innerHTML = element.description;
    })

    newTableRow.innerHTML = humidity;
    newTableRow2.innerHTML = sunriseSvg;
    newTableRow3.innerHTML = pressure;
    newTableRow4.innerHTML = sunsetSvg;
    newTableRow5.innerHTML = temperature;
    newTableRow6.innerHTML = wind;
    newTableRow7.innerHTML = highTemperature;
    newTableRow8.innerHTML = visibility;
    newTableRow9.innerHTML = lowTemperature;
    newTableRow10.innerHTML = clouds;

    newTableRow.appendChild(newTd);
    newTableRow2.appendChild(newTd2);

    newTableRow3.appendChild(newTd3);
    newTableRow4.appendChild(newTd4);

    newTableRow5.appendChild(newTd5);
    newTableRow6.appendChild(newTd6);

    newTableRow7.appendChild(newTd7);
    newTableRow8.appendChild(newTd8);

    newTableRow9.appendChild(newTd9);
    newTableRow10.appendChild(newTd10);


    table.appendChild(newTableRow);
    table.appendChild(newTableRow2);
    table.appendChild(newTableRow3);
    table.appendChild(newTableRow4);
    table.appendChild(newTableRow5);
    table.appendChild(newTableRow6);
    table.appendChild(newTableRow7);
    table.appendChild(newTableRow8);
    table.appendChild(newTableRow9);
    table.appendChild(newTableRow10);

}

function getCityQuery() {
    var qStr = '';
    if (search.value !== '') {
        qStr += `q=${search.value}`;
        if (searchCountry.value !== '') {
            qStr += `,${searchCountry.value}`;
        }
    }
    return qStr;
}

function getzipQuery() {
    var qStr = '';
    if (searchZIPInput.value !== '' && searchzipcountry.value !== '') {
        qStr += `q=${searchZIPInput.value}`;
        qStr += `,${searchzipcountry.value}`;
    }
    return qStr;
}

function getLatLonQuery() {
    var qStr = '';
    if (searchLatInput.value !== '' && searchLonInput.value !== '') {
        qStr += `lat=${searchLatInput.value}`;
        qStr += `&lon=${searchLonInput.value}`;
    }
    // console.log(qStr);
    return qStr;
}

function addData(chart, label, data) {
    chart.data.labels.push(label);
    chart.data.datasets.forEach((dataset) => {
        dataset.data.push(data);
    });
    chart.update();
}

function removeAllData(chart) {
    chart.data.labels = [];
    chart.data.datasets.forEach((dataset) => {
        dataset.data = [];
    });
    chart.update();
}